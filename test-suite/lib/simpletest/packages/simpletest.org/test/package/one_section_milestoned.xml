<?xml version="1.0"?>
<page title="Overview of SimpleTest" here="Overview">
		<long_title>
				Overview and feature list for the SimpleTest PHP unit tester and web tester
		</long_title>
		<content>
				<section name="plan" title="Release plan" version="1.1">
						<milestone version="1.1beta">
								<concern name="unit-tester">
										<bug tracker="1896582">Undefined property $_reporter + fatal error</bug>
								</concern>
								<concern name="documentation">
										<task>
												The HELP_MY_TESTS_DONT_WORK_ANYMORE needs to be updated.
										</task>
								</concern>
								<concern name="extensions"/>
								<concern name="build">
										<task status="done">PHP 5.3 compatible under E_STRICT</task>
										<task>PHP 5.2.0-5 compatible under E_STRICT</task>
										<task>PHP 5.1.0-6 compatible under E_STRICT</task>
										<bug tracker="1884013" status="done">continuous integration</bug>
										<bug tracker="1853765">
												error_reporting(E_ALL|E_STRICT)gives lots of warning
												<note>
														We've know this for years, this is the time.
												</note>
										</bug>
										<task>
												Drop underscores from protected methods and
												private variables.
												Make all variables private and add protected
												accessors where we use them internally.
												<note>
														That way people will start complaining.
														Upon each complaint we'll add an accessor and
														capture the use case from them.
												</note>
												<note>
														We'll stick the use cases in the feature request
														tracker for now
												</note>
										</task>
										<task>Move web site to new server</task>
								</concern>
						</milestone>
				</section>
		</content>
		<internal>
				<link>
						<a href="#summary">Quick summary</a>
						of the SimpleTest tool for PHP.
				</link>
				<link>
						<a href="#features">List of features</a>,
						both current ones and those planned.
				</link>
				<link>
						There are plenty of <a href="#resources">unit testing resources</a>
						on the web.
				</link>
		</internal>
		<external>
				<link>
						<a local="unit_test_documentation">Documentation for SimpleTest</a>.
				</link>
				<link>
						<a href="http://www.lastcraft.com/first_test_tutorial.php">How to write PHP test cases</a>
						is a fairly advanced tutorial.
				</link>
				<link>
						<a href="http://simpletest.org/api/">SimpleTest API</a> from phpdoc.
				</link>
		</external>
		<meta>
				<keywords>
						software development tools,
						php programming,
						programming php,
						software development tools,
						Tools for extreme programming,
						free php scripts,
						links of testing tools,
						php testing resources,
						mock objects,
						junit,
						jwebunit,
						htmlunit,
						itc,
						php testing links,
						unit test advice and documentation,
						extreme programming in php
				</keywords>
		</meta>
</page>
